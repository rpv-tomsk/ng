branches/ng6
    CMS:
    * Изменен метод поиска чпу-шных страниц, выгрузка всех чпу-страниц и поиск на клиенте заменена на формирование запроса url IN (URLS)
    * findPageRowByURL() теперь может возвращать редиректы (т.е. объекты NG::BlockContent), например в случае URL не оканчивающегося на /.
    * Удалена (закомментирована) поддержка ng_rewrite / catch = 1
    * Изменено имя авторизационной куки админки, оно теперь содержит хостнейм как суффикс.
    * Авторизационная кука админки теперь выставляется без указания domain, т.е. действует только на точный хост запроса, если явно не указан перечень доменов в $NG::Adminside::Auth::config::CookieDomain.
    + Добавлен механизм удаления невалидных авторизационных кук админки (аггрессивное удаление по всем вышестоящим доменам и по всем компонентам URL).
    
    * DBlist: Добавлена поддержка orderParams
    * Включено автоматическое разрегистрирование неиспользуемых блоков шаблонов

    * NG::Module::List::Row->new() / NG::Module::List::Row->init() - изменено API
    - NG::Module::List::Row->number()
    - NG::Module::List::Row->addColumn()
    - NG::Module::List::Row->buildColumnList()
    - NG::Module::List::Row->getComposedKeyValue()
    * NG::Module::List::Row - HCOLUMNS переименовано в HFIELDS
    - NG::Module::List->buildRefCurrentUrl()
    * NG::Module::List->beforeDelete($id) -> NG::Module::List->beforeDelete($id,$form)
    * NG::Module::List->afterDelete($id) -> NG::Module::List->afterDelete($id,$form)
    * NG::Module::List работает с БД через NG::Field->dbFields
    * NG::Module::List получает данные вывода из NG::Field->getListCellHTML(), NG::Field->getListHeader()
    * NG::Module::List->getListSQLFields() - изменена реализация, добавлен параметр вызова
    - NG::Module::List->getListColumns() - преобразовано в getListHeaders(), вызывает NG::Field->getListHeaderCell()
    + NG::Module::List->getListHeaders()
    * NG::Module::List->highlightSortedColumns() - изменена реализация, теперь метод обрабатывает столбцы, полученные из getListHeaders()
    * NG::Module::List->processSorting() - изменены параметры вызова
    * NG::Module::List - вывод полей изображений поддерживает field->{LIST_WIDTH} и field->{LIST_HEIGHT}
    * NG::Module::List->addRowLink() - добавлена поддержка условия добавления ссылки путем передачи ссылки на процедуру проверки в ключе CONDITION.
      Параметром процедуре проверки передается объект NG::Module::List::Row
    * NG::Module::List - Исправлена ошибка JS - если форма редактирования с RTF-редактором вызывалась аяксом дважды, то закрытие
      формы не происходило из-за ошибки JS - объект редактора уничтожался также дважды, вторая попытка (на уничтоженном объекте)
      вызывала ошибку.
    * NG::Module::List - исправлена обработка ref. Поддерживается вложенный ref.
    * NG::Module::List - добавлен setListInfo() и переменная шаблона LIST_INFO.
      
    * NG::Module::Record: Добавлен метод updateKeysVersion(), аналогично NG::Module::List.

    * NG::Field - Удалена поддержка METHOD (метода обработки перед сохранением) в описании конфигурации полей NG::Field
    * NG::Field - Изменена работа processChilds. Требуется перепроверить все конфигурации полей с заданным CHILDS.
      Поддерживается обратная совместимость только на связке image->image.
      В случае связки file->file при (пере)заливке содержимого основного поля (при незаданном процессоре) подчиненные будут пустыми (очищены).
      Копирование значений в поля CHILDS для нефайловых связок по умолчанию не производится.
      Фактически CHILDS задается только для очистки подчиненных файловым полям полей.
      
    * NG::Field->new(): Изменена последовательность создания объектов полей (NG::Field и потомков).
      При указанном CLASS проверка типа TYPE в new() не производится. (несколько бесполезно, т.к. List все еще проверяет TYPE при analyze)
      Несовместимость: TYPE=>'fkparent' + CLASS=>'Some::Class' - не произойдет замена fkparent -> hidden/select/radiobutton
    * Удален тип поля float, используйте number.
    * Удалена поддержка флага HIDDEN_FIELD в NG::Form/NG::Field;
    * Вынесено $NG::Field::classesMap
    + Метод NG::Field->dbField() - поле может указать, какие поля БД ему нужны
    * Метод NG::Field->dbValue() - добавлен параметр имени поля БД
    * Метод NG::Field->setLoadedValue() - поведение изменилось, теперь в него передается вся полученная строка БД.
      В большинстве случаев загрузка данных в объект поля производится по схеме dbFields(ACTION) -> setLoadedValue(TABLE_ROW)
    + Метод NG::Field->searchIndexValue()
    + Метод NG::Field->getListCellHTML()
    
    * В рамках поддержки актуальных версий HTML::Template::Compiled в админке NG::Block->opentemplate() включена case_sensitive=1.
    * Таблица ng_ftsindex - добавлено поле disabled для упрощения запроса на странице поиска (убрано связывание с ng_sitestruct по link,link+lang).
      См. файл docs/ng_ftsindex_disabled.pg.sql

    * Добавлено поле modulecode в ng_templates, для возможности создавать модульные страницы. SQL:
          ALTER TABLE public.ng_templates ADD COLUMN modulecode VARCHAR(25);
          ALTER TABLE public.ng_templates ALTER COLUMN template DROP NOT NULL;
    + Добавлена патченная версия CGI::Session (собственная реализация устаревания и очистки сессий) (основано на CGI::Session 4.48).
    - Удален метод NG::Session->cleanSessions()
    + Добавлен метод NG::Application->cleanup()
    
    * Multicheckbox: Изменены правила проверки check().
      Если значение не было выставлено setFormValue(), то проверяется загруженное из хранилища значение (если оно было загружено).
      Функционал нужен для работы частично редактируемой формы, например в processCheckbox() List-а.
    * Multicheckbox: Исправлено вычисление SELECTED (если справочник задан через VALUES)
    * Multicheckbox: Удалена поддержка параметра NOLOADDICT.  (Он непонятный и не найден используемым в проектах).
    * Multicheckbox: Убран признак IS_FAKEFIELD
    * Multicheckbox: Реализовано удаление данных из таблицы хранилища связи
    * Multicheckbox: Реализовано сохранение выбранных значений в STORE_FIELD
    * Multicheckbox: Добавлена поддержка DEFAULT в описании справочника OPTIONS.VALUES
    
    * Изменена верстка админки (переработаны стили оформления лист-а и форм). Кастомные шаблоны потребуют (несложной) адаптации.
    
    + NG::Mailer::Mailgun mail delivery module

branches/ng-4.3

===
    ЗАМЕЧАНИЯ!
     
    1) NG::Module::List->setFormStructure(), NG::Module::Record->formStructure()   --- ?
    
    2) NG::Module::Record - CheckData(), BeforeInsert(), AfterInsert(), BeforeUpdate(), AfterUpdate() - переименовать согласно NG::Module::List ?

    3) NG::Dispatch - появились die() !
    
    4) Чистка кода, в новых фичах системы много TODO.
    
    Требуется review для коммитов, которые не влиты в ng-4.3
    
    r1053,r1056 - NG::Sitemap 
    
    r1055 - событие deletenode - передавать ID или PAGEOBJ ? Использование PAGEOBJ - не рекомендуется,
            поскольку событие вызывается для уже удаленной страницы и методы могут возвращать неверное значение.
            
            
    
===
    Общие изменения

    + Добавлен класс NG::Session и реализации хранилищ сессий (с бэкпортом в ng-4.2)
    + Поддержка системных событий (NG::Event, NG::Sitestruct::Event, NG::Module::List::Event)
    * В свойствах страниц CMS появилось новое обязательное поле title
    * JS из шаблона universaladm.tmpl вынесен в ng.js, чистка JS
    * Фикс отображения popup-окон в случае устаревания сессии
    * Код администрирования пользователей и смены пароля изменен для использования новых возможностей формы и полей. Плохо оттестирована работа групп админов.
    * Тьюринг конфигурируется через основной конфиг сайта

    NG::Form
    
    + Для поддержки использования нескольких конфигураций форм в NG::Module::List в свойства формы введен идентифицирующий префикс
    * Реорганизация работы с полями (action-ы полей обрабатываются полями, вызовы соответствующих методов полей при операциях с данными)
    + Структура формы - возможно определять компоновку полей на форме
    * Изменена передача параметров формы в шаблон - теперь через хэш FORM

    
    NG::Field
    
    * Реорганизация методов для удобного наследования классов
    + Поля теперь умеют обрабатывать действия пользователя самостоятельно

    + NG::Field::Select для полей типов select | radiobutton  ( тип fkselect совмещен с select путем расширенной конфигурации источника данных списка)
    + NG::Field::Multicheckbox для полей типов multicheckbox | multiselect


    NG::Module::List
    
    * переработан, реорганизован код.
    * !!! переименованы основные методы для перекрытия модуля !!!
            CheckData()     ->  checkData()
            PrepareData     ->  prepareData()
            BeforeDelete()  ->  beforeDelete()
            AfterDelete()   ->  afterDelete()
            RowFunction     ->  rowFunction()
    + Возможность использования нескольких форм для редактирования записи ( additionalForm() )
    + Обработка действий с формой и полями формы через action=formaction
    + Конфигурирование структуры и шаблона формы через setFormStructure() setFormTemplate()
    * Изменено конфигурирование привилегий на действия со списком (удален listPrivileges(), новые методы setAddPriv() setEditPriv() setDeletePriv())


    NG::Module::Record
    
    + Обработка действий с формой и полями формы через action=formaction
    + Конфигурирование структуры и шаблона формы через formStructure() setFormTemplate()
    

tags/ng-4.2
    
    Версия 4.2. Основана на r920. Основные изменения:
    
    Переработанный NG::Adminside. Объекты NG::PageModule, управляемое создание страниц, изменяемый атрибутный состав страницы.
    Поиск по Module::List, переходы на созданную запись. Переработанный полнотекстовый поиск по сайту, новый стиль его конфигурации. 
    

    NGService
    
    + getURLWithParams()
    + datetime2date()
    
    NHtml
    
    * Исправлены парсеры cite и quote
    
    NG::Bootstrap
    
    + тестовая возможность запуска в режиме FastCGI
    
    NG::Application 
    
    + Возможность выставлять флаг nocache
    + Возможность выставлять content-type ответа 
    
    NG::Adminside 
    
    + getModuleObject() с параметром инициализации модуля в виде HASH
    + NG::PageModule. Новый код управления страницами. Страница-модуль. 
      Контролируемое создание/удаление/итд
    + Код сохранения данных индексов перенесен в NG::DBI.
    + Новый стиль конфигурации индексатора данных
    + Гибкий список параметров страницы, конфигурируемая форма свойств страницы
    + Возможность отключения вкладок в админке
    + Отдельная привилегия на удаление страниц
    
    NG::Face 
    
    + setHistory
    + pushHistory
    + поддержка конфигурации списка полей свойств страницы

    NG::Module::List
    
    + Класс NG::Module::List::Row
    + Большее использование возможностей класса NG::Field
    + Поиск по списку 
    + Добавлены режимы перенаправления на добавленную строку, подсветка добавленной строки
    + Реальная многофильтровость в списке
    + Тип фильтра "tabs" 
    * метод getListFilter удален в пользу метода getListFilters
    + BeforeBuildList
    + AfterBuildList
    + Переменная в шаблоне: BEFORE_LIST_TMPL
    + Корректная работа индексатора, если изменение данных влечет изменение суффикса индекса.
    
    NG::Form 
    
    + подчиненные поля (CHILDS)
    + Обработка данных поля (METHOD)
    
    NG::Field
    
    + Поле типа URL 
    
    NG::Polls
    
    + HTML-подтверждение удаления варианта ответа
    * Сброс вариантов ответа по умолчанию при смене типа опроса
    
    
    JS-скрипт:
    + Функция PostForm() отправки формы с использованием фрейма.
    + Функция ajax_form(): поддержка методов POST и GET, указанных в отправляемой форме
    
    * Фиксы мелких ошибок, предупреждений, чистка кода.


tags/ng-4.1

    Базовая версия 4.1.

    Основана на r711, c изменениями до r743 за исключением новых функций добавления страниц.


Изменения по сравнению с версией ng-4.0:


Важные изменения:

* изменен порядок параметров в вызове afterFormLoadData($action,$form) на afterFormLoadData($form,$action);
* Изменен метод(принцип) конфигурации rtf-полей.
+ Класс NG::Field
+ Класс NG::Module::List::Filters, многофильтровость
* Изменена структура размещения js-скриптов CMS, теперь они в /admin-side/js/common/
* Методы работы с полнотекстовым индексом вынесены в подклассы NG::DBI
+ Класс сбора статистики NG::Counter
+ Добавлена установка фокуса на поле ввода логина при входе в админку

Общие изменения

+ Использование модулей File::Copy, File::Path для файловых операций.
- NGService::move_file
- NGService::create_dir
+ NGService::loadValueFromFile
+ NGService::saveValueToFile
* NGService::get_size_text отображает размер в Гб как максимальное значение
+ NGService::create_page_list формирует PREV_LIST,NEXT_LIST 
+ NGService::current_datetime
+ NSecure::is_valid_referer 
* Исправлена проверка прав на линкованные блоки в NG::Module::Sitestruct
+ NG::Bootstrap формирует переменные метода запуска CMS
+ Свойство NG::Module::readonly()
+ Код возврата M_EXIT и метод NG::Module::exit для немедленного завершения обработки запроса в a-side
+ метод traverseWithCheck и его использование в редакторе привилегий.


NG::Form

* Изменен метод(принцип) конфигурации rtf-полей.
+ поле rtfconfig в таблице ng_templates, вместо styles_list,css_file,templates_list
+ Использование NG::Field
+ Поле типа email
+ Добавлено корректное уничтожение rtf-редакторов при закрытии форм редактирования

Изменения в модуле NG::Module::List

+ Класс NG::Module::List::Filters, многофильтровость
+ Использование NG::Field
+ Non-AJAX подтверждение удаления записи в List
+ Возможность указания имени записи в формах List
+ NG::Module::List::beforeInsertUpdate($form,$action)
+ Начальная реализация поиска по List-у
+ disablePages()
+ проверка наличия указания типов полей в конфигурации модуля
* исправлено формирование ссылок сортиовки в столбцах, добавлены FKParam и FilterParam


tags/ng-4.0

    Базовая версия 4.0.

    Основана на r621, c изменениями  r622,r644. 
